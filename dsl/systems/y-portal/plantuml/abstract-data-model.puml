@startuml
hide empty members
interface Identifiable {
  getId()
}
'note left: //Идентифицируемость//\n(однозначно находится системой)
interface Typed {
    RECORD getType()
}
'note left: //Классифицируемость//\n(входит в коллекцию)

interface Displayable {
    String getTitle()
}
'note left: //Отображаемость//\n(однозначно находится человеком)

interface Temporal {
    Period getLife()
}
'note left: //Временность//\n(имеет ограниченный срок жизни)

interface Body {
    Object getBody()
}
'note left: //Содержательность//\n(имеет структуру/тело)

interface Type {
    Record[] getRecords()
}
'note left: //Тип/класс//\n(является коллекцией элементов, списком)
interface Meta {
    Object getSchema()
}
'note left: //Схема данных//\n(описывает структуру)
remove Displayable
remove Temporal
remove Body
remove Typed
remove Identifiable
remove Meta
remove Type

abstract RECORD <<Identifiable>> {
    UUID id
}
'note right: Запись таблицы БД
RECORD ..|> Identifiable

abstract ENTRY <<Displayable>>  {
    UUID id
    String title
}
'note right: Объект с наименованием
ENTRY -up-|> RECORD
ENTRY ..|> Displayable

abstract DOCUMENT <<Body>> {
    UUID id
    JSON body
}
DOCUMENT -up-|> RECORD
DOCUMENT ..|> Body
ENTRY  .[hidden] DOCUMENT

frame "Простые справочники" as simple {

abstract LIST <<Type>> {
    UUID id
    String title
}
abstract ::ITEM <<Typed>>{
    UUID id
    String title
    List type
}
}
note bottom of simple: Тип транспорта, Роли контрагента
::ITEM -up-|> ENTRY
::ITEM ..|> Typed


LIST -up-|> ENTRY
::ITEM -left-* LIST


frame "Доменные сущности" as single {
    abstract SCHEMA<? extends FORM> <<Meta>> <<Type>> <<Temporal>>{
        UUID id
        JSON schema
    }
    abstract FORM <<Displayable>> <<Typed>>  {
        UUID id
        JSON data
        ....
        SCHEMA schema
        ....
        String displayString
    }
}
note right of FORM: Заявки, Предложения

SCHEMA ..|> Type
SCHEMA ..|> Meta
SCHEMA -up-|> DOCUMENT
FORM ..|> Typed
FORM ..|> Displayable
FORM -up-|>  DOCUMENT
FORM -left-* SCHEMA
frame "Основные справочники (мастер-данные)" as mdm {
abstract CATALOGUE {
    UUID id
    String title
}
CATALOGUE -up-|> LIST

abstract CATALOGUE_SCHEMA <<Typed>>{
    UUID id
    JSON schema
}
abstract ::REFERENCE {
    UUID id
    JSON data
    ....
    SCHEMA schema
    ....
    String displayString
}
}
note left of ::REFERENCE: Контрагенты, Локации, ...
CATALOGUE_SCHEMA -up-|> SCHEMA
CATALOGUE *-right- CATALOGUE_SCHEMA
CATALOGUE_SCHEMA *-right- ::REFERENCE
::REFERENCE -up-|> FORM
::REFERENCE ..|> Body

@enduml

