@startuml
hide empty members

interface Typed {
    + getType()
}
interface Displayable {
    + getTitle()
}
interface Temporal {
    + getLife()
}

remove Displayable
remove Temporal
remove Typed


abstract  RECORD  {
    *ID : uuid <<generated>>
}
abstract ENTRY  {
    *TITLE: string
}
ENTRY -up-|> RECORD
ENTRY ..|> Displayable

abstract DOCUMENT {
    DATA: jsonb
}
DOCUMENT -up-|> RECORD

abstract ::ITEM {
    *REGISTRY: uuid <<FK>>
}
::ITEM -up-|> ENTRY
::ITEM ..|> Typed

class ITEM <<table>>  {
    *ID uuid <<generated>>
    *REGISTRY: uuid <<FK>>
    --
    * **TITLE string**
}
ITEM .up.> ::ITEM

abstract ::REGISTRY

::ITEM -left-* ::REGISTRY

entity REGISTRY <<table>> {
    *ID uuid <<generated>>
    --
    * **TITLE string**
}
REGISTRY .up.> ::REGISTRY
ITEM -left-* REGISTRY
::REGISTRY .up.> ENTRY

metaclass REGISTRY_SCHEMA <<table>>   {
    *ID uuid <<generated>>
    *REGISTRY: uuid <<FK>>
    --
    * **SCHEMA jsonb**
    --
    START timestamp
    END timestamp
}
REGISTRY_SCHEMA ..|> Temporal
REGISTRY_SCHEMA -up-* REGISTRY

REGISTRY_SCHEMA .up.> FORM

class REFERENCE <<table>>{
    *ID uuid <<generated>>
    *SCHEMA: uuid <<FK>>
    --
    * **DATA jsonb**
}
REFERENCE -left-* REGISTRY_SCHEMA
REFERENCE .up.> FORM

abstract FORM extends DOCUMENT implements Typed,Displayable {
    *SCHEMA: uuid <<FK>>
}

abstract SCHEMA extends ::REGISTRY

FORM -left-* SCHEMA

class TRANSPORT_REQUEST <<table>> {
    *ID uuid <<generated>>
    --
    * **DATA jsonb**
    --
    DISPLAY_STRING string
    --
    SEARCH_STRING string
    --
    STATUS enum
    --
        CREATE timestamp
        UPDATE timestamp
}
TRANSPORT_REQUEST .up.> FORM
metaclass TRANSPORT_REQUEST_SCHEMA  <<table>> {
    *ID uuid <<generated>>
    --
    * **SCHEMA jsonb**
    --
    START timestamp
    END timestamp
    --
    CREATE timestamp
    UPDATE timestamp
}
TRANSPORT_REQUEST_SCHEMA ..|> Temporal
TRANSPORT_REQUEST -left-* TRANSPORT_REQUEST_SCHEMA
TRANSPORT_REQUEST_SCHEMA .up.> SCHEMA
SCHEMA .up.> DOCUMENT



@enduml

